#This code was written with assistance from ChatGPT-4.0

#Here, I test whether the mutation is responsible for an increase in handicap rates from zero, by setting the mutation rate = 0. I'm looking for the rate to remain at 0.

import unittest
import numpy as np
import sys
import os

# Add the path to the src directory (one level up + src)
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))
from quant_model import SexLinkedHandicapModel

class TestSexLinkedHandicapModelEdgeCases(unittest.TestCase):

    def test_zero_mutation_and_zero_initial_handicap(self):
        # Initialize the model with zero mutation rate and zero initial handicap
        model = SexLinkedHandicapModel(
            pop_size=1000,
            max_handicap=3.0,
            mutation_std=0.0,  # No mutation
            k=1.5  # Normal viability selection
        )
        
        # Set initial handicaps to zero
        model.male_handicaps = np.zeros(model.pop_size)
        
        # Run one generation update
        model.update_generation()

        # Print to check if the male handicaps are still all zeros
        print(f"After one generation with zero mutation and zero initial handicap, male handicaps: {model.male_handicaps}")
        
        # Assert that the male handicaps remain at zero (no mutation, no initial handicap change)
        self.assertTrue(np.all(model.male_handicaps == 0.0), "Handicaps did not remain zero as expected")

if __name__ == '__main__':
    print("Running unit tests for SexLinkedHandicapModel with zero mutation rate and zero initial handicap...")
    unittest.main()
